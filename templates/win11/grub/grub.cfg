clear

# Custom params
set PARAMS_BOOT="ro"
set PARAMS_ISO="auto=true priority=critical vga=795 --- quiet"
set PARAMS_LIVE='boot=live components quiet splash findiso=${iso_path}'
set PARAMS_LIVE_FAILSAFE='boot=live components memtest noapic no pm nodma nomce nosmp nosplash vga=788'
set ISO_TYPE="CFG_TYPE"
set ISO_HOST="CFG_HOST"
set ISO_IP="CFG_IP"
set KVERSION_DEBIAN="CFG_KERNEL"
set ISO_VERSION="CFG_VERSION"
set ISO_BUILDTIME="CFG_BUILDTIME"
set GRUB_THEME_NAME="CFG_THEME"
set SLEEPTIME=CFG_SLEEPTIME

export GRUB_THEME_NAME
export KVERSION_DEBIAN
export PARAMS_ISO
export PARAMS_LIVE
export PARAMS_LIVE_FAILSAFE

# Grub parameters
set timeout=CFG_TIMEOUT

# Banner
# figlet -w 120 "Unattend-My-Iso" | awk '{printf "echo \"%-*s\"\n", 120, sprintf("%*s", (120+length($0))/2, $0)}'
echo "                                                                                       "
echo " -===================================================================================- "
echo "    _   _             _   _                 _       __  __            ___              "
echo "   | | | |_ __   __ _| |_| |_ ___ _ __   __| |     |  \/  |_   _     |_ _|___  ___     "
echo "   | | | | '_ \ / _` | __| __/ _ \ '_ \ / _` |_____| |\/| | | | |_____| |/ __|/ _ \    "
echo "   | |_| | | | | (_| | |_| ||  __/ | | | (_| |_____| |  | | |_| |_____| |\__ \ (_) |   "
echo "    \___/|_| |_|\__,_|\__|\__\___|_| |_|\__,_|     |_|  |_|\__, |    |___|___/\___/    "
echo "                                                                           |___/       "
echo " -===================================================================================- "
echo " Config:"
echo " ISO-Base      -> $ISO_TYPE"
echo " Name          -> $ISO_HOST"
echo " IP            -> $ISO_IP"
echo " Kernel        -> $KVERSION_DEBIAN"
echo " Version       -> $ISO_VERSION"
echo " Build Time    -> $ISO_BUILDTIME"
echo " Theme         -> $GRUB_THEME_NAME"
echo " Sleeptime     -> $SLEEPTIME"
echo " Timeout       -> $timeout"
echo " Params (ISO)  -> $PARAMS_ISO"
echo " Params (BOOT) -> $PARAMS_BOOT"
echo " -===============================================================================- "
echo ""
sleep $SLEEPTIME

# Modules
if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
insmod efi_gop
insmod efi_uga
insmod video_bochs
insmod video_cirrus
insmod gfxterm
insmod png
insmod lvm
insmod gzio
insmod part_gpt
insmod ext2

# Fonts
if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
   font=$prefix/font.pf2
fi
set gfxmode=1680x1050x32
set gfxpayload=keep
terminal_output gfxterm

# Colors
set color_normal=black/light-gray
set color_highlight=white/black
set theme="/boot/grub/themes/$GRUB_THEME_NAME/theme.txt"
set iso_path = "/boot/iso/kali-linux-2025.1a-live-amd64.iso"
export iso_path


# --- Funxtions ----------------------------------------------------------------
# Run Custom Kernel
function boot_custom_kernel_lvm {
    insmod ext2
    insmod lvm
    set root=(hd0,gpt2)
    search --file --set=root /vmlinuz-$1
    echo "Kernel /vmlinuz-$1 ..."
    linux /vmlinuz-$1-amd64 root=/dev/mapper/vg--pve-lv--root $2
    echo "Ramdisk /initrd.img-$1-amd64 ..."
    initrd /initrd.img-$1-amd64
    echo "Booting ..."
    boot
}
function boot_custom_kernel {
    insmod ext2
    insmod lvm2
    set root=(hd0,gpt2)
    search --file --set=root /boot/vmlinuz-$1-amd64
    echo "Kernel /boot/vmlinuz-$1-amd64 ..."
    linux /boot/vmlinuz-$1-amd64 root=/dev/vda2 rootfstype=ext4 $2
    echo "Ramdisk /boot/initrd.img-$1-amd64 ..."
    initrd /initrd.img-$1-amd64
    echo "Booting ..."
    boot
}

# Run ISO Installer
function boot_iso_installer {
    set root=(cd0)
    linux    $2/vmlinuz $3
    initrd   $2/initrd.gz
    boot
}
function boot_iso_umi_installer {
    set root=(cd0)
    linux    $2/vmlinuz $3
    initrd   $2/initrd-umi.gz
    boot
}
function boot_iso_live {
    set root=(cd0)
    linux    $2/vmlinuz-$1-amd64 $3 
    initrd   $2/initrd.img-$1-amd64
    boot
}
# --- Menu ---------------------------------------------------------------------
menuentry "--- INSTALL ------------------------------------------------------" {
   true
}
# Menu entriesuu
menuentry --hotkey=3 --class debian "      => Unattended Install (CONSOLE)" {
   boot_iso_umi_installer "" /install.amd $PARAMS_ISO
}
menuentry --hotkey=4 --class debian "      => Unattended Install (GTK)" {
   boot_iso_umi_installer "" /install.amd/gtk $PARAMS_ISO
}
submenu "       -- Regular Install " {
    set theme="/boot/grub/themes/$GRUB_THEME_NAME/theme.txt"
    menuentry --hotkey=1 --class debian "      ==> Regular Install (CONSOLE)" {
       boot_iso_installer "" /install $PARAMS_ISO
    }
    menuentry --hotkey=2 --class debian "      ==> Regular Install (GTK)" {
       boot_iso_installer "" /install/gtk $PARAMS_ISO
    }
}
menuentry "--- BOOT ---------------------------------------------------------" {
   true
}
submenu "       -- Boot Live " {
    set theme="/boot/grub/themes/$GRUB_THEME_NAME/theme.txt"
    menuentry --hotkey=1 --class debian "      => Boot Live" {
       boot_iso_live $KVERSION_DEBIAN /live $PARAMS_LIVE
    }
    menuentry --hotkey=1 --class debian "      => Boot Live (Failsafe)" {
       boot_iso_live $KVERSION_DEBIAN /live $PARAMS_LIVE_FAILSAFE
    }
}
submenu "       -- Boot existing OS " {
    set theme="/boot/grub/themes/$GRUB_THEME_NAME/theme.txt"
    menuentry --hotkey=1 "      => Boot Local disk ($KVERSION_DEBIAN)" {
       boot_custom_kernel_lvm $KVERSION_DEBIAN $PARAMS_BOOT
    }
}
menuentry "--- EXTRAS -------------------------------------------------------" {
   true
}
submenu "       -- Memory Test" {
    set theme="/boot/grub/themes/$GRUB_THEME_NAME/theme.txt"
    menuentry --hotkey=1 "      => Memory Test memtest86+" {
        set root=(cd0)
        linux /boot/memtest86+x64.bin
    }
    menuentry --hotkey=1 "      => Memory Test memtest86+ (UEFI)" {
        set root=(cd0)
        chainloader /boot/memtest86+x64.efi
    }
}
submenu "       -- Helpers" {
    set theme="/boot/grub/themes/$GRUB_THEME_NAME/theme.txt"
    menuentry --hotkey=1 "      => Firmware Setup (UEFI)" {
        fwsetup
    }
    menuentry --hotkey=2 "      => Reboot" {
        reboot
    }
    menuentry --hotkey=3 "      => Halt" {
        halt
    }
}
